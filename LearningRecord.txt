Git学习记录
一、创建版本库
mkdir 创建文件夹
touch 新建文件
vi 文件名 编辑文件
git init初始化Git仓库

添加文件到Git仓库
 1.git add xx 可反复使用，添加多个文件
 2.git commit xx 提交文件。-m "xxx" 本次提交说明

二、时光机穿梭
git status 查看结果 仓库当前状态
git diff xx 查看difference  按Q退出
 
三、版本回退
git log 显示从最近到最远的提交日志  git log --pretty=oneline
git reset --hard HEAD^  在Git中， HEAD表当前版本,上个版本就是HEAD^，
						上上个版本就是HEAD^^，当然往上100个版本写100个^较容易数不过来，
						 所以写成HEAD~100.
git reset --hard commit_id 根据id换版本 
git reflog 记录每一次命令
git log 查看提交历史

四、工作区和暂存区
工作区(Working Directory):就是你在电脑里能看到的目录，比如我的learngit文件夹就是一个工作区
版本库(Repository):工作区有一个隐藏目录“.git”，这个不算工作区，而是Git的版本库。
第一步是 “git add”把 件添加进去，实际上就是把 件修改添加到暂存区; 
第二步是 “git commit”提交更改，实际上就是把暂存区的所有内容提交到当前分支。

git add命令实际上就是把要提交的所有修改放到暂存区(Stage)，然后，执行git commit就可以一次性把暂存区的所有修改提交到分支。

五、管理修改
每次修改，如果不add到暂存区，那就不会加入到commit中。

六、撤销修改
git checkout -- readmi.txt  把文件在工作区的修改全部撤销
							总之，就是让这个文件回到最近一次git commit或git add时的状态。
git reset HEAD file 将暂存区的文件修改回退到工作区